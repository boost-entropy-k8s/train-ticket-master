// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package execute.tars.rpc.orderother;

import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.annotation.*;
import com.qq.tars.common.support.Holder;

@Servant
public interface OrderOtherControllerPrx {

	public String home();

	public String home(@TarsContext java.util.Map<String, String> ctx);

	public void async_home(@TarsCallback OrderOtherControllerPrxCallback callback);

	public void async_home(@TarsCallback OrderOtherControllerPrxCallback callback, @TarsContext java.util.Map<String, String> ctx);

	public ResponseLeftTicketInfo getTicketListByDateAndTripId(SeatTars seatRequest);

	public ResponseLeftTicketInfo getTicketListByDateAndTripId(SeatTars seatRequest, @TarsContext java.util.Map<String, String> ctx);

	public void async_getTicketListByDateAndTripId(@TarsCallback OrderOtherControllerPrxCallback callback, SeatTars seatRequest);

	public void async_getTicketListByDateAndTripId(@TarsCallback OrderOtherControllerPrxCallback callback, SeatTars seatRequest, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrder createNewOrder(OrderTars createOrder);

	public ResponseOrder createNewOrder(OrderTars createOrder, @TarsContext java.util.Map<String, String> ctx);

	public void async_createNewOrder(@TarsCallback OrderOtherControllerPrxCallback callback, OrderTars createOrder);

	public void async_createNewOrder(@TarsCallback OrderOtherControllerPrxCallback callback, OrderTars createOrder, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrder addcreateNewOrder(OrderTars order);

	public ResponseOrder addcreateNewOrder(OrderTars order, @TarsContext java.util.Map<String, String> ctx);

	public void async_addcreateNewOrder(@TarsCallback OrderOtherControllerPrxCallback callback, OrderTars order);

	public void async_addcreateNewOrder(@TarsCallback OrderOtherControllerPrxCallback callback, OrderTars order, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrderList queryOrders(QueryInfoTars qi);

	public ResponseOrderList queryOrders(QueryInfoTars qi, @TarsContext java.util.Map<String, String> ctx);

	public void async_queryOrders(@TarsCallback OrderOtherControllerPrxCallback callback, QueryInfoTars qi);

	public void async_queryOrders(@TarsCallback OrderOtherControllerPrxCallback callback, QueryInfoTars qi, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrderList queryOrdersForRefresh(QueryInfoTars qi);

	public ResponseOrderList queryOrdersForRefresh(QueryInfoTars qi, @TarsContext java.util.Map<String, String> ctx);

	public void async_queryOrdersForRefresh(@TarsCallback OrderOtherControllerPrxCallback callback, QueryInfoTars qi);

	public void async_queryOrdersForRefresh(@TarsCallback OrderOtherControllerPrxCallback callback, QueryInfoTars qi, @TarsContext java.util.Map<String, String> ctx);

	public ResponseSoldTicket calculateSoldTicket(int travelDate, String trainNumber);

	public ResponseSoldTicket calculateSoldTicket(int travelDate, String trainNumber, @TarsContext java.util.Map<String, String> ctx);

	public void async_calculateSoldTicket(@TarsCallback OrderOtherControllerPrxCallback callback, int travelDate, String trainNumber);

	public void async_calculateSoldTicket(@TarsCallback OrderOtherControllerPrxCallback callback, int travelDate, String trainNumber, @TarsContext java.util.Map<String, String> ctx);

	public ResponseString getOrderPrice(String orderId);

	public ResponseString getOrderPrice(String orderId, @TarsContext java.util.Map<String, String> ctx);

	public void async_getOrderPrice(@TarsCallback OrderOtherControllerPrxCallback callback, String orderId);

	public void async_getOrderPrice(@TarsCallback OrderOtherControllerPrxCallback callback, String orderId, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrder payOrder(String orderId);

	public ResponseOrder payOrder(String orderId, @TarsContext java.util.Map<String, String> ctx);

	public void async_payOrder(@TarsCallback OrderOtherControllerPrxCallback callback, String orderId);

	public void async_payOrder(@TarsCallback OrderOtherControllerPrxCallback callback, String orderId, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrder getOrderById(String orderId);

	public ResponseOrder getOrderById(String orderId, @TarsContext java.util.Map<String, String> ctx);

	public void async_getOrderById(@TarsCallback OrderOtherControllerPrxCallback callback, String orderId);

	public void async_getOrderById(@TarsCallback OrderOtherControllerPrxCallback callback, String orderId, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrder modifyOrder(String orderId, int status);

	public ResponseOrder modifyOrder(String orderId, int status, @TarsContext java.util.Map<String, String> ctx);

	public void async_modifyOrder(@TarsCallback OrderOtherControllerPrxCallback callback, String orderId, int status);

	public void async_modifyOrder(@TarsCallback OrderOtherControllerPrxCallback callback, String orderId, int status, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrderSecurity securityInfoCheck(long checkDate, String accountId);

	public ResponseOrderSecurity securityInfoCheck(long checkDate, String accountId, @TarsContext java.util.Map<String, String> ctx);

	public void async_securityInfoCheck(@TarsCallback OrderOtherControllerPrxCallback callback, long checkDate, String accountId);

	public void async_securityInfoCheck(@TarsCallback OrderOtherControllerPrxCallback callback, long checkDate, String accountId, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrder saveOrderInfo(OrderTars orderInfo);

	public ResponseOrder saveOrderInfo(OrderTars orderInfo, @TarsContext java.util.Map<String, String> ctx);

	public void async_saveOrderInfo(@TarsCallback OrderOtherControllerPrxCallback callback, OrderTars orderInfo);

	public void async_saveOrderInfo(@TarsCallback OrderOtherControllerPrxCallback callback, OrderTars orderInfo, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrder updateOrder(OrderTars order);

	public ResponseOrder updateOrder(OrderTars order, @TarsContext java.util.Map<String, String> ctx);

	public void async_updateOrder(@TarsCallback OrderOtherControllerPrxCallback callback, OrderTars order);

	public void async_updateOrder(@TarsCallback OrderOtherControllerPrxCallback callback, OrderTars order, @TarsContext java.util.Map<String, String> ctx);

	public ResponseString deleteOrder(String orderId);

	public ResponseString deleteOrder(String orderId, @TarsContext java.util.Map<String, String> ctx);

	public void async_deleteOrder(@TarsCallback OrderOtherControllerPrxCallback callback, String orderId);

	public void async_deleteOrder(@TarsCallback OrderOtherControllerPrxCallback callback, String orderId, @TarsContext java.util.Map<String, String> ctx);

	public ResponseOrderList findAllOrder();

	public ResponseOrderList findAllOrder(@TarsContext java.util.Map<String, String> ctx);

	public void async_findAllOrder(@TarsCallback OrderOtherControllerPrxCallback callback);

	public void async_findAllOrder(@TarsCallback OrderOtherControllerPrxCallback callback, @TarsContext java.util.Map<String, String> ctx);
}
