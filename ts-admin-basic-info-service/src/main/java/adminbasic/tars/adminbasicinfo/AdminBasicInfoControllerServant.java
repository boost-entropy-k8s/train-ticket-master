// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package adminbasic.tars.adminbasicinfo;

import adminbasic.tars.rpc.config.ConfigTars;
import adminbasic.tars.rpc.contacts.ContactsTars;
import adminbasic.tars.rpc.priceconfig.PriceConfigTars;
import adminbasic.tars.rpc.station.StationTars;
import adminbasic.tars.rpc.train.TrainTypeTars;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.annotation.*;
import com.qq.tars.common.support.Holder;

@Servant
public interface AdminBasicInfoControllerServant {

	public String home();

	public Response getAllContacts(@TarsHolder Holder<java.util.List<ContactsTars>> outData);

	public Response deleteContacts(String contactsId, @TarsHolder Holder<String> outData);

	public Response modifyContacts(ContactsTars mci, @TarsHolder Holder<ContactsTars> outData);

	public Response addContacts(ContactsTars c, @TarsHolder Holder<ContactsTars> outData);

	public Response getAllStations(@TarsHolder Holder<java.util.List<StationTars>> outData);

	public Response deleteStation(StationTars s, @TarsHolder Holder<StationTars> outData);

	public Response modifyStation(StationTars s, @TarsHolder Holder<StationTars> outData);

	public Response addStation(StationTars s, @TarsHolder Holder<StationTars> outData);

	public Response getAllTrains(@TarsHolder Holder<java.util.List<TrainTypeTars>> outData);

	public Response deleteTrain(String id, @TarsHolder Holder<TrainTypeTars> outData);

	public Response modifyTrain(TrainTypeTars t, @TarsHolder Holder<TrainTypeTars> outData);

	public Response addTrain(TrainTypeTars t, @TarsHolder Holder<TrainTypeTars> outData);

	public Response getAllConfigs(@TarsHolder Holder<java.util.List<ConfigTars>> outData);

	public Response deleteConfig(String name, @TarsHolder Holder<ConfigTars> outData);

	public Response modifyConfig(ConfigTars c, @TarsHolder Holder<ConfigTars> outData);

	public Response addConfig(ConfigTars c, @TarsHolder Holder<ConfigTars> outData);

	public Response getAllPrices(@TarsHolder Holder<java.util.List<PriceConfigTars>> outData);

	public Response deletePrice(PriceConfigTars pi, @TarsHolder Holder<PriceConfigTars> outData);

	public Response modifyPrice(PriceConfigTars pi, @TarsHolder Holder<PriceConfigTars> outData);

	public Response addPrice(PriceConfigTars pi, @TarsHolder Holder<PriceConfigTars> outData);
}
