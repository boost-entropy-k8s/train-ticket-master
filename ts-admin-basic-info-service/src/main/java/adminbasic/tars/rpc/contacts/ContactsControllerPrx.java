// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package adminbasic.tars.rpc.contacts;

import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.annotation.*;
import com.qq.tars.common.support.Holder;

@Servant
public interface ContactsControllerPrx {

	public String home();

	public String home(@TarsContext java.util.Map<String, String> ctx);

	public void async_home(@TarsCallback ContactsControllerPrxCallback callback);

	public void async_home(@TarsCallback ContactsControllerPrxCallback callback, @TarsContext java.util.Map<String, String> ctx);

	public ResponseContactsList getAllContacts();

	public ResponseContactsList getAllContacts(@TarsContext java.util.Map<String, String> ctx);

	public void async_getAllContacts(@TarsCallback ContactsControllerPrxCallback callback);

	public void async_getAllContacts(@TarsCallback ContactsControllerPrxCallback callback, @TarsContext java.util.Map<String, String> ctx);

	public ResponseContacts createNewContacts(ContactsTars aci);

	public ResponseContacts createNewContacts(ContactsTars aci, @TarsContext java.util.Map<String, String> ctx);

	public void async_createNewContacts(@TarsCallback ContactsControllerPrxCallback callback, ContactsTars aci);

	public void async_createNewContacts(@TarsCallback ContactsControllerPrxCallback callback, ContactsTars aci, @TarsContext java.util.Map<String, String> ctx);

	public ResponseContacts createNewContactsAdmin(ContactsTars aci);

	public ResponseContacts createNewContactsAdmin(ContactsTars aci, @TarsContext java.util.Map<String, String> ctx);

	public void async_createNewContactsAdmin(@TarsCallback ContactsControllerPrxCallback callback, ContactsTars aci);

	public void async_createNewContactsAdmin(@TarsCallback ContactsControllerPrxCallback callback, ContactsTars aci, @TarsContext java.util.Map<String, String> ctx);

	public ResponseString deleteContacts(String contactsId);

	public ResponseString deleteContacts(String contactsId, @TarsContext java.util.Map<String, String> ctx);

	public void async_deleteContacts(@TarsCallback ContactsControllerPrxCallback callback, String contactsId);

	public void async_deleteContacts(@TarsCallback ContactsControllerPrxCallback callback, String contactsId, @TarsContext java.util.Map<String, String> ctx);

	public ResponseContacts modifyContacts(ContactsTars info);

	public ResponseContacts modifyContacts(ContactsTars info, @TarsContext java.util.Map<String, String> ctx);

	public void async_modifyContacts(@TarsCallback ContactsControllerPrxCallback callback, ContactsTars info);

	public void async_modifyContacts(@TarsCallback ContactsControllerPrxCallback callback, ContactsTars info, @TarsContext java.util.Map<String, String> ctx);

	public ResponseContactsList findContactsByAccountId(String accountId);

	public ResponseContactsList findContactsByAccountId(String accountId, @TarsContext java.util.Map<String, String> ctx);

	public void async_findContactsByAccountId(@TarsCallback ContactsControllerPrxCallback callback, String accountId);

	public void async_findContactsByAccountId(@TarsCallback ContactsControllerPrxCallback callback, String accountId, @TarsContext java.util.Map<String, String> ctx);

	public ResponseContacts getContactsByContactsId(String id);

	public ResponseContacts getContactsByContactsId(String id, @TarsContext java.util.Map<String, String> ctx);

	public void async_getContactsByContactsId(@TarsCallback ContactsControllerPrxCallback callback, String id);

	public void async_getContactsByContactsId(@TarsCallback ContactsControllerPrxCallback callback, String id, @TarsContext java.util.Map<String, String> ctx);
}
