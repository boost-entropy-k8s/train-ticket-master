// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package fdse.microservice.tars.basic;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TrainTypeTars {

	@TarsStructProperty(order = 0, isRequire = false)
	public String id = "";
	@TarsStructProperty(order = 1, isRequire = false)
	public int economyClass = 0;
	@TarsStructProperty(order = 2, isRequire = false)
	public int confortClass = 0;
	@TarsStructProperty(order = 3, isRequire = false)
	public int averageSpeed = 0;

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public int getEconomyClass() {
		return economyClass;
	}

	public void setEconomyClass(int economyClass) {
		this.economyClass = economyClass;
	}

	public int getConfortClass() {
		return confortClass;
	}

	public void setConfortClass(int confortClass) {
		this.confortClass = confortClass;
	}

	public int getAverageSpeed() {
		return averageSpeed;
	}

	public void setAverageSpeed(int averageSpeed) {
		this.averageSpeed = averageSpeed;
	}

	public TrainTypeTars() {
	}

	public TrainTypeTars(String id, int economyClass, int confortClass, int averageSpeed) {
		this.id = id;
		this.economyClass = economyClass;
		this.confortClass = confortClass;
		this.averageSpeed = averageSpeed;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(id);
		result = prime * result + TarsUtil.hashCode(economyClass);
		result = prime * result + TarsUtil.hashCode(confortClass);
		result = prime * result + TarsUtil.hashCode(averageSpeed);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TrainTypeTars)) {
			return false;
		}
		TrainTypeTars other = (TrainTypeTars) obj;
		return (
			TarsUtil.equals(id, other.id) &&
			TarsUtil.equals(economyClass, other.economyClass) &&
			TarsUtil.equals(confortClass, other.confortClass) &&
			TarsUtil.equals(averageSpeed, other.averageSpeed) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != id) {
			_os.write(id, 0);
		}
		_os.write(economyClass, 1);
		_os.write(confortClass, 2);
		_os.write(averageSpeed, 3);
	}


	public void readFrom(TarsInputStream _is) {
		this.id = _is.readString(0, false);
		this.economyClass = _is.read(economyClass, 1, false);
		this.confortClass = _is.read(confortClass, 2, false);
		this.averageSpeed = _is.read(averageSpeed, 3, false);
	}

}
