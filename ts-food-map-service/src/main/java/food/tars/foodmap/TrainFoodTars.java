// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package food.tars.foodmap;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TrainFoodTars {

	@TarsStructProperty(order = 0, isRequire = false)
	public String id = "";
	@TarsStructProperty(order = 1, isRequire = false)
	public String tripId = "";
	@TarsStructProperty(order = 2, isRequire = false)
	public java.util.List<FoodTars> foodList = null;

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getTripId() {
		return tripId;
	}

	public void setTripId(String tripId) {
		this.tripId = tripId;
	}

	public java.util.List<FoodTars> getFoodList() {
		return foodList;
	}

	public void setFoodList(java.util.List<FoodTars> foodList) {
		this.foodList = foodList;
	}

	public TrainFoodTars() {
	}

	public TrainFoodTars(String id, String tripId, java.util.List<FoodTars> foodList) {
		this.id = id;
		this.tripId = tripId;
		this.foodList = foodList;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(id);
		result = prime * result + TarsUtil.hashCode(tripId);
		result = prime * result + TarsUtil.hashCode(foodList);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TrainFoodTars)) {
			return false;
		}
		TrainFoodTars other = (TrainFoodTars) obj;
		return (
			TarsUtil.equals(id, other.id) &&
			TarsUtil.equals(tripId, other.tripId) &&
			TarsUtil.equals(foodList, other.foodList) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != id) {
			_os.write(id, 0);
		}
		if (null != tripId) {
			_os.write(tripId, 1);
		}
		if (null != foodList) {
			_os.write(foodList, 2);
		}
	}

	static java.util.List<FoodTars> cache_foodList;
	static { 
		cache_foodList = new java.util.ArrayList<FoodTars>();
		FoodTars var_2 = new FoodTars();
		cache_foodList.add(var_2);
	}

	public void readFrom(TarsInputStream _is) {
		this.id = _is.readString(0, false);
		this.tripId = _is.readString(1, false);
		this.foodList = (java.util.List<FoodTars>) _is.read(cache_foodList, 2, false);
	}

}
