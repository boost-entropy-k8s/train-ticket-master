// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package ticketinfo.tars.rpc.basic;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TravelTars {

	@TarsStructProperty(order = 0, isRequire = false)
	public TripTars trip = null;
	@TarsStructProperty(order = 1, isRequire = false)
	public String startingPlace = "";
	@TarsStructProperty(order = 2, isRequire = false)
	public String endPlace = "";
	@TarsStructProperty(order = 3, isRequire = false)
	public long departureTime = 0;

	public TripTars getTrip() {
		return trip;
	}

	public void setTrip(TripTars trip) {
		this.trip = trip;
	}

	public String getStartingPlace() {
		return startingPlace;
	}

	public void setStartingPlace(String startingPlace) {
		this.startingPlace = startingPlace;
	}

	public String getEndPlace() {
		return endPlace;
	}

	public void setEndPlace(String endPlace) {
		this.endPlace = endPlace;
	}

	public long getDepartureTime() {
		return departureTime;
	}

	public void setDepartureTime(long departureTime) {
		this.departureTime = departureTime;
	}

	public TravelTars() {
	}

	public TravelTars(TripTars trip, String startingPlace, String endPlace, long departureTime) {
		this.trip = trip;
		this.startingPlace = startingPlace;
		this.endPlace = endPlace;
		this.departureTime = departureTime;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(trip);
		result = prime * result + TarsUtil.hashCode(startingPlace);
		result = prime * result + TarsUtil.hashCode(endPlace);
		result = prime * result + TarsUtil.hashCode(departureTime);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TravelTars)) {
			return false;
		}
		TravelTars other = (TravelTars) obj;
		return (
			TarsUtil.equals(trip, other.trip) &&
			TarsUtil.equals(startingPlace, other.startingPlace) &&
			TarsUtil.equals(endPlace, other.endPlace) &&
			TarsUtil.equals(departureTime, other.departureTime) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != trip) {
			_os.write(trip, 0);
		}
		if (null != startingPlace) {
			_os.write(startingPlace, 1);
		}
		if (null != endPlace) {
			_os.write(endPlace, 2);
		}
		_os.write(departureTime, 3);
	}

	static TripTars cache_trip;
	static { 
		cache_trip = new TripTars();
	}

	public void readFrom(TarsInputStream _is) {
		this.trip = (TripTars) _is.read(cache_trip, 0, false);
		this.startingPlace = _is.readString(1, false);
		this.endPlace = _is.readString(2, false);
		this.departureTime = _is.read(departureTime, 3, false);
	}

}
